'use client';

import { SharedRanges } from '../../generated/prisma';
import { Button } from './catalist/button';
import {
  Dialog,
  DialogActions,
  DialogDescription,
  DialogTitle,
} from '@/components/catalist/dialog';
import { deleteSharedRangesById } from '@/lib/actions';
import { useState } from 'react';
import { toast } from 'sonner';
export function BtnDeleteSharedPlan({
  sharedRanges,
}: {
  sharedRanges: SharedRanges;
}) {
  const [isOpen, setIsOpen] = useState(false);
  return (
    <>
      <Button
        color='red'
        className='cursor-pointer'
        onClick={() => {
          setIsOpen(true);
          console.log('üöÄ ~ BtnLeaveSharedPlan ~ sharedRange:', sharedRanges);
        }}
      >
        –£–¥–∞–ª–∏—Ç—å –æ–±—â–∏–π –≥—Ä–∞—Ñ–∏–∫
      </Button>
      <Dialog open={isOpen} onClose={setIsOpen}>
        <DialogTitle>–£–¥–∞–ª–∏—Ç—å {sharedRanges.name}?</DialogTitle>
        <DialogDescription>
          –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –ø–ª–∞–Ω—ã –æ—Ç–ø—É—Å–∫–æ–≤ –∫–æ–ª–ª–µ–≥ –∏–∑ —ç—Ç–æ–≥–æ –æ–±—â–µ–≥–æ
          –≥—Ä–∞—Ñ–∏–∫–∞ –æ—Ç–ø—É—Å–∫–æ–≤.
        </DialogDescription>
        {/* <DialogBody>
          <Field>
            <Label>Amount</Label>
            <Input name='amount' placeholder='$0.00' />
          </Field>
        </DialogBody> */}
        <DialogActions>
          <Button plain onClick={() => setIsOpen(false)}>
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button
            onClick={async () => {
              setIsOpen(false);
              const res = await deleteSharedRangesById({
                id: sharedRanges.id,
              });
              if (!res.ok) {
                toast.error(
                  '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ–±—â–∏–π –≥—Ä–∞—Ñ–∏–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ',
                );
              } else {
                toast.success('–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –æ–±—â–∏–π –≥—Ä–∞—Ñ–∏–∫');
              }
            }}
          >
            –î–∞, —É–¥–∞–ª–∏—Ç—å
          </Button>
        </DialogActions>
      </Dialog>
    </>
  );
}
