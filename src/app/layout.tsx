import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { ContainerClientProviderVH } from '@/components/ContainerClientProviderVH';
import Header2 from '@/components/Header2';
import { findOrCreatePersonalRanges } from '@/lib/findOrCreatePersonalRanges';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  console.log('ðŸš€ ~ RootLayout ~ start');
  const res = await findOrCreatePersonalRanges();
  if (!res.ok) {
    return <div>Error: {res.errorMsg}</div>;
  }
  console.log('ðŸš€ ~ RootLayout ~ personalRangesId:', res.personalRangesId);
  console.log('ðŸš€ ~ RootLayout ~ personalRanges:', res.personalRanges);
  return (
    <html lang='en'>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ContainerClientProviderVH
          session={res.session}
          personalRangesId={res.personalRangesId}
          personalRangesName={res.personalRanges.userName}
          personalRangesIdFromCookie={res.personalRangesIdFromCookie}
          personalRanges={res.personalRanges}
        >
          <Header2 session={res.session} />
          {children}
        </ContainerClientProviderVH>
      </body>
    </html>
  );
}
